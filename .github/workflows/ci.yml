name: BricBrac CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - '*'
  schedule:
    # run at 6AM & 6PM UTC
    - cron:  '0 6,18 * * *'

jobs:
  Linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: swift test --enable-test-discovery

  iOS:
    runs-on: macos-latest
    needs: [Linux] # Linux must pass first
    strategy:
      matrix:
        destination: ['platform=macOS', 'platform=iOS Simulator,name=iPod touch (7th generation)', 'platform=tvOS Simulator,name=Apple TV 4K']

    steps:
      - uses: actions/checkout@v2
      - name: Apple - ${{ matrix.destination }}
        run: xcodebuild -scheme "BricBrac" -destination "${{ matrix.destination }}" clean test

  macOS10:
    runs-on: macos-10.15
    needs: [Linux] # Linux must pass first
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: swift test

  macOS11:
    runs-on: macos-11.0
    needs: [macOS10] # macOS10 must pass first
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: swift test

  Windows10:
    name: Windows (Development Snapshot)
    runs-on: windows-latest
    steps:
      - uses: seanmiddleditch/gha-setup-vsdevenv@master

      - name: Install swift-5.3.3
        run: |
          Install-Binary -Url "https://swift.org/builds/swift-5.3.3-release/windows10/swift-5.3.3-RELEASE/swift-5.3.3-RELEASE-windows10.exe" -Name "installer.exe" -ArgumentList ("-q")

      - name: Set Environment Variables
        run: |
          echo "SDKROOT=C:\Library\Developer\Platforms\Windows.platform\Developer\SDKs\Windows.sdk" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          echo "DEVELOPER_DIR=C:\Library\Developer" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Adjust Paths
        run: |
          echo "C:\Library\Swift-development\bin;C:\Library\icu-67\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          echo "C:\Library\Developer\Toolchains\unknown-Asserts-development.xctoolchain\usr\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          
      - name: Install Supporting Files
        run: |
          Copy-Item "$env:SDKROOT\usr\share\ucrt.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\ucrt\module.modulemap"
          Copy-Item "$env:SDKROOT\usr\share\visualc.modulemap" -destination "$env:VCToolsInstallDir\include\module.modulemap"
          Copy-Item "$env:SDKROOT\usr\share\visualc.apinotes" -destination "$env:VCToolsInstallDir\include\visualc.apinotes"
          Copy-Item "$env:SDKROOT\usr\share\winsdk.modulemap" -destination "$env:UniversalCRTSdkDir\Include\$env:UCRTVersion\um\module.modulemap"


      - name: Swift Version
        run: swift --version
      - name: Build (Debug)
        run: swift build -v -c debug
      - name: Build (Release)
        run: swift build -v -c release
      - name: Test (Debug)
        run: swift test -v --configuration debug
      - name: Test (Release)
        run: swift test -v --configuration release -Xswiftc -enable-testing

  Release:
    runs-on: ubuntu-latest
    needs: [Linux, macOS10, macOS11, iOS, Windows10]

    steps:
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            CHANGELOG.md
            RELEASE_NOTES.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
